// <auto-generated />
using System;
using Culinary_Assistant_Notifications_Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Culinary_Assistant_Notifications_Infrastructure.Migrations
{
    [DbContext(typeof(NotificationsContext))]
    [Migration("20250529145637_password recover model")]
    partial class passwordrecovermodel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("NotificationsSchema")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Culinary_Assistant_Notifications_Domain.Models.PasswordRecover", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("RecoverId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("PasswordRecovers", "NotificationsSchema");
                });

            modelBuilder.Entity("Culinary_Assistant_Notifications_Domain.Models.PasswordRecover", b =>
                {
                    b.OwnsOne("Culinary_Assistant.Core.ValueTypes.Email", "UserEmail", b1 =>
                        {
                            b1.Property<Guid>("PasswordRecoverId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .HasColumnType("text");

                            b1.HasKey("PasswordRecoverId");

                            b1.ToTable("PasswordRecovers", "NotificationsSchema");

                            b1.WithOwner()
                                .HasForeignKey("PasswordRecoverId");
                        });

                    b.Navigation("UserEmail")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
