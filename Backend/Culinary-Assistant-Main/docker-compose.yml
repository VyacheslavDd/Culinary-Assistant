version: '3.4'

networks:
  culinary-network:
    driver: bridge

services:
  culinary-assistant-main:
    networks:
        - culinary-network
    image: culinaryassistantmain:latest
    restart: always
    container_name: CulinaryAssistantMain
    ports:
        - "5000:5000"
    build:
      context: .
      dockerfile: Culinary-Assistant-Main/Dockerfile
    depends_on:
        culinarydb:
           condition: service_healthy

  culinary-assistant-images:
    networks:
        - culinary-network
    image: culinaryassistantimages:latest
    container_name: CulinaryAssistantImages
    restart: always
    depends_on:
        - rabbitmq
    ports:
        - "5002:5002"
    build:
        context: .
        dockerfile: Culinary-Assistant-Images/Dockerfile

  culinarydb:
    networks:
        - culinary-network
    restart: always
    container_name: CulinaryAssistantDatabase
    ports:
        - "5432:5432"
    image: postgres:latest
    volumes:
        - "./volumes/pgdata:/var/lib/postgresql/data"
    environment:
        - POSTGRES_DB=CulinarDB
        - POSTGRES_USER=Culinar334
        - POSTGRES_PASSWORD=culinarypasswd
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "CulinarDB", "-U", "Culinar334" ]
      interval: 5s
      timeout: 5s
      retries: 30

  rabbitmq:
    networks:
        - culinary-network
    container_name: MessageBroker
    restart: always
    ports:
        - "5672:5672"
        - "15672:15672"
    image: rabbitmq:management
    volumes:
        - "./volumes/rabbitmq:/var/lib/rabbitmq"

  minio:
    networks:
        - culinary-network
    restart: always
    container_name: ObjectStorage
    image: minio/minio
    volumes:
        - "./volumes/minio:/data"
    environment:
        - MINIO_ROOT_USER=culinaryadmin
        - MINIO_ROOT_PASSWORD=culinarypassword
    ports:
        - "9000:9000"
        - "9001:9001"
    command: server --console-address ":9001" /data


  miniobucketscreator:
    container_name: BucketsCreator
    image: minio/mc
    networks:
        - culinary-network
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc alias set myminio http://minio:9000 culinaryadmin culinarypassword); do
      echo 'Waiting for MinIO...';
      sleep 2;
      done;
      /usr/bin/mc alias set myminio http://minio:9000 culinaryadmin culinarypassword;
      /usr/bin/mc mb --ignore-existing myminio/receiptpictures;
      /usr/bin/mc mb --ignore-existing myminio/userpictures;
      exit 0;
      "